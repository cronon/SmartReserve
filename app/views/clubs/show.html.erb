<p id="notice"><%= notice %></p>

<p>
  <strong>Name:</strong>
  <%= @club.name %>
  <strong>Description</strong>
  <%= @club.description %>
  <%= image_tag((@club.photos.first.image_url if @club.photos.first), height: '150') %>
</p>
<script src="http://api-maps.yandex.ru/2.0-stable/?load=package.standard&lang=ru-RU" type="text/javascript"></script>
<script type="text/javascript">
ymaps.ready(init);
function init() {
    var myMap = new ymaps.Map('map', {
        center: [53.753994, 27.622093],
        zoom: 9,
        behaviors: ['default']
    });
    myMap.controls.add('zoomControl');
    ymaps.geocode('<%= @club.adress %>', {
        // boundedBy: myMap.getBounds(), // Сортировка результатов от центра окна карты
        // strictBounds: true, // Вместе с опцией boundedBy будет искать строго внутри области, указанной в boundedBy
        results: 1 // Если нужен только один результат, экономим трафик пользователей
    }).then(function (res) {
            // Выбираем первый результат геокодирования.
            var firstGeoObject = res.geoObjects.get(0),
                // Координаты геообъекта.
                coords = firstGeoObject.geometry.getCoordinates(),
                // Область видимости геообъекта.
                bounds = firstGeoObject.properties.get('boundedBy');
            // Добавляем первый найденный геообъект на карту.
            myMap.geoObjects.add(firstGeoObject);
            // Масштабируем карту на область видимости геообъекта.
            myMap.setBounds(bounds, {
                checkZoomRange: true // проверяем наличие тайлов на данном масштабе.
            });
            /**
             * Все данные в виде javascript-объекта.
             */
            console.log('Все данные геообъекта: ', firstGeoObject.properties.getAll());
            /**
             * Метаданные запроса и ответа геокодера.
             * @see http://api.yandex.ru/maps/doc/geocoder/desc/reference/GeocoderResponseMetaData.xml
             */
            console.log('Метаданные ответа геокодера: ', res.metaData);
            /**
             * Метаданные геокодера, возвращаемые для найденного объекта.
             * @see http://api.yandex.ru/maps/doc/geocoder/desc/reference/GeocoderMetaData.xml
             */
            console.log('Метаданные геокодера: ', firstGeoObject.properties.get('metaDataProperty.GeocoderMetaData'));
            /**
             * Точность ответа (precision) возвращается только для домов.
             * @see http://api.yandex.ru/maps/doc/geocoder/desc/reference/precision.xml
             */
            console.log('precision', firstGeoObject.properties.get('metaDataProperty.GeocoderMetaData.precision'));
            /**
             * Тип найденного объекта (kind).
             * @see http://api.yandex.ru/maps/doc/geocoder/desc/reference/kind.xml
             */
            console.log('Тип геообъекта: %s', firstGeoObject.properties.get('metaDataProperty.GeocoderMetaData.kind'));
            console.log('Название объекта: %s', firstGeoObject.properties.get('name'));
            console.log('Описание объекта: %s', firstGeoObject.properties.get('description'));
            console.log('Полное описание объекта: %s', firstGeoObject.properties.get('text'));
            /**
             * Если нужно добавить по найденным геокодером координатам метку со своими стилями и контентом балуна, создаем новую метку по координатам найденной и добавляем ее на карту вместо найденной.
             */
            /**
             var myPlacemark = new ymaps.Placemark(coords, {
             iconContent: 'моя метка',
             balloonContent: 'Содержимое балуна <strong>моей метки</strong>'
             }, {
             preset: 'twirl#violetStretchyIcon'
             });

             myMap.geoObjects.add(myPlacemark);
             */
        });
}
</script>

 <div id="map" style="width: 600px; height: 400px"></div>
<% @comments = @club.comments %>
<div id="comments" class="row">
  <% @comments.each do |c| %>
    <% @comment = c %>
    <%= render 'comments/comment' %>
  <% end %>
</div>
<div class="row">
  <% if can? :create, Comment.new %>
    <%= form_for(Comment.new, :url => club_comments_url(@club), :remote => :true, :action => :create) do |f| %>
      <%= f.text_area :description %>
      <%= f.submit 'Add comment' %>
    <% end %>
  <% end %>
</div>

<%= link_to 'Tables', club_new_order_path(@club) %> |
<%= link_to 'Edit', edit_club_path(@club) %> |
<%= link_to 'Back', clubs_path %>
